@php
    $admin_settings = getAdminAllSetting();
    $company_settings = getCompanyAllSetting($company_id, $workspace_id);
    $favicon = isset($company_settings['favicon']) ? $company_settings['favicon'] : (isset($admin_settings['favicon']) ? $admin_settings['favicon'] : 'uploads/logo/favicon.png');
@endphp
<html>

<head>

    <link href="{{ asset('packages/workdo/BusinessProcessMapping/src/Resources/assets/css/material.css') }}" rel="stylesheet">
    <link href="{{ asset('packages/workdo/BusinessProcessMapping/src/Resources/assets/css/bootstrap.min.css') }}" rel="stylesheet">
    <!-- Favicon icon -->
    <link rel="icon"
        href="{{ check_file($favicon) ? get_file($favicon) : get_file('uploads/logo/favicon.png') }}{{ '?' . time() }}"
        type="image/x-icon" />
    <style>
        body {
            touch-action: none;
        }

        .control-section {
            margin-top: 100px;
        }
    </style>
    <style>
        @font-face {
            font-family: 'e-ddb-icons';
            src: url(data:application/x-font-ttf;charset=utf-8;base64,AAEAAAAKAIAAAwAgT1MvMj1tShgAAAEoAAAAVmNtYXDon+lDAAACIAAAAIJnbHlmw/gRIAAAAvgAACw0aGVhZBGJTLcAAADQAAAANmhoZWEIXQQpAAAArAAAACRobXR4oAAAAAAAAYAAAACgbG9jYdYyye4AAAKkAAAAUm1heHABOAD4AAABCAAAACBuYW1ldAwInAAALywAAAMVcG9zdNAiwIsAADJEAAABuQABAAAEAAAAAFwEAAAAAAAEAAABAAAAAAAAAAAAAAAAAAAAKAABAAAAAQAAJo24vV8PPPUACwQAAAAAANc1g90AAAAA1zWD3QAAAAAEAAQAAAAACAACAAAAAAAAAAEAAAAoAOwABgAAAAAAAgAAAAoACgAAAP8AAAAAAAAAAQQAAZAABQAAAokCzAAAAI8CiQLMAAAB6wAyAQgAAAIABQMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAUGZFZABA5wDnJgQAAAAAXAQAAAAAAAABAAAAAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAAAAAIAAAADAAAAFAADAAEAAAAUAAQAbgAAAAQABAABAADnJv//AADnAP//AAAAAQAEAAAAAQACAAMABAAFAAYABwAIAAkACgALAAwADQAOAA8AEAARABIAEwAUABUAFgAXABgAGQAaABsAHAAdAB4AHwAgACEAIgAjACQAJQAmACcAAAAAAAABBAICAn4CxgLeAyYDeAQUBHAEoAWEBZwGkgd8B+YH/ghMCMIJaAnaClYLMAuqC7gMpg2ODmQOwg8aD9IQoBF6ElYTRhRGFIQUwBVMFhoAAAADAAAAAAPOA84ACwBnAOsAAAEjFTMVMzUzNSM1IwUVDxQrAS8VPxYfFQUVHx07AT8LFxUXNycjJz8ONS8fDx4Ban19P319PwEZAQICAwMECQwNEBESFBYWDAsMDQwNDQwNDQwMDAsXFRQTEQ8NDAkEBAMCAQEBAQEBAgMEBAkMDQ8RExQVFwsMDAwNDQwNDQwNDAsMFhYUEhEQDQwJBAMDAgIB/a8BAwMEBAYGBwgICQoKCwsMDQ0NDg4PDxAQEBEQERIRDw8PDw4PDg4NDhoZGBP6XfoyEgkICQcIBgYGBQQEAwMCAQEBAgMEBQUGBwgICQoKCwwMDA0ODg4PDxAPERARERESERESEBEQEBAPDw4ODQ0NDAsLCgoJCAgHBgYEBAMDAQKWP319P32cDQ0MDA0LDBYWFBIRDw4LCgQDAwICAQECAgMDBAoLDg8REhQWFgwLDQwMDQ0NDA0MDAwLFxUUExEPDQwKAwQDAgEBAQEBAQIDBAMKDA0PERMUFRcLDAwMDQwNEhERERAREA8PDw4ODg0MDAwLCgoJCAgHBgUFBAMCAgECAwMDBQUFBw0QEhMy+l76EwsLDAwNDQ4ODg8ODw8PEA8REhEQERAQEA8PDg4NDQ0MCwsLCQkJBwcGBgUDBAIBAQEBAgQDBQYGBwcJCQkLCwsMDQ0NDg4PDxAQEBEQERIAAwAAAAADzgPOAAMAXwDjAAATITUhBRUPFCsBLxU/Fh8VBR8eOwE/CxcVFzcnIyc/Dj0BLx4PHu0BOP7IAZYBAgIDAwQKCw4PERIUFhYMCw0MDA0NDQwNDAwMCxcVFBMRDw0MCgMEAwIBAQEBAQECAwQDCgwNDxETFBUXCwwMDA0MDQ0NDAwNCwwWFhQSEQ8OCwoEAwMCAgH9rgEBAgQDBQYGBwcJCQkLCwsMDQ0NDg4PDxAQEBEQERIRDw8PDw4PDg4NDhoZGBP6XvoyEwkJCAgHBwYFBQUDAwMCAQICAwQFBQYHCAgJCgoLDAwMDQ4ODg8PDxAREBERERIREhEQERAQEA8PDg4NDQ0MCwsLCQkJBwcGBgUDBAIBAlc/Hw0NDAwNCwwWFhQSEQ8OCwoEAwMCAgEBAgIDAwQKCw4PERIUFhYMCw0MDA0NDQwNDAwMCxcVFBMRDw0MCgMEAwIBAQEBAQECAwQDCgwNDxETFBUXCwwMDA0MDRIREREQERAPDw8ODg4NDAwMCwoKCQgIBwYFBQQDAgIBAgMDAwUFBQcNEBITMvpe+hMLCwwMDQ0ODg4PDg8PDxAPERIREBEQEBAPDw4ODQ0NDAsLCwkJCQcHBgYFAwQCAQEBAQIEAwUGBgcHCQkJCwsLDA0NDQ4ODw8QEBAREBESAAAAAAIAAAAAA3cD1AADAGkAADchNSETFR8dOwE/HTURIxEPDy8PAyOJAu79Ej8BAgMDBQQGBgcICAkJCgoLCwwMDQ0ODQ8ODw8PEBAQEBAQDw8PDg8NDg0NDAwLCwoKCQkICAcGBgQFAwMCAXwCAwUHCAoLDQ4OEBARERESEhERERAQDg4NCwUJCAYEAgF8K30BdxAQDxAPDw4ODg4NDA0LDAsKCgkJCAgGBwUFBAQDAgEBAgMEBAUFBwYICAkJCgoLDAsNDA0ODg4ODw8QDxAQAbb+ShQTExERDw4OCwsJBwYFAgEBAgUGBwkLCw0PBxAREhMUAcAAAAAABAAAAAAD9AO1AAMABwAvADMAAAEVITUlFSM1IREzFSE1MxEvDyEPDjchNSECvP6IAjN9/RK8AnC8AQIDBAUGBwgJCgoLDAsNDf0SDQwMDAsKCggJBwYFBAMCuwJw/ZABg7u7u3x8/si8vAE4DQ0MCwsKCgkIBwYGBAMCAQECAwQGBgcICQoKCwwMDK+8AAAAAQAAAAADdwN3AAsAAAEhFSERMxEhNSERIwHC/scBOXwBOf7HfAI+fP7HATl8ATkABAAAAAADdwN3AAMABwALADIAACUzNSMBFSM1IxUhNSMRFzMRIRE7AT8HNRE1LwcjISMPBwGDfX0BtT4+/kp9fT4BeHwFBAoLCgkHBQICBQcJCgsKBAX9kAUECgsKCQcFAsi7AbU+Pvr6/c59ATn+xwIFBwkKCwoEBQJwBQQKCwoJBwUCAgUHCQoLCgQAAAAAAgAAAAADtQP0ADcAPgAAExEfCTMhMz8JES8JKwEVMxEhETM1KwEPCDczETMRMydKAQEBBQcICgsGBwYC7gYHBgsKCAcFAQEBAQEBBQcICgsGBwZ9Pv2QPn0GBwYLCggHBQEB+X58frwCvP2OBgYGCwoJBgUCAQECBQYJCgsGBgYCcgYGBgsKCQYFAgF9/gwB9H0BAgUGCQoLBgZ2/ooBdrwAAAADAAAAAAMoA3cAIgBFAIUAAAEfDw8OKwE1EzMfDR0BDw4jNQMhPw8vDz8MLw8hAi8KCQkJCAcIBgYGBAQEAgEBAQECBAQEBgYGCAcJCAkJCpx9CQoJCAgIBwcGBQUEAwMBAQMDBAUFBgcHCAgICQoJfbwBhxQVExMRERAODQwKCQcFAwEBAQMEBAYGCAgJCQsLCwwNExAPBgYFBQQDAwIBAQECBAcICgwNDxASEhQVFRb+nQHCAQEDAwQEBgYHBwgICAkKCQoJCQkICAcHBgUFBAMCArwBOAICAwQFBQYHBwgICQkJCgkKCQgJBwgGBgYEBAMDAQG8/Y8BAwUHCQoLDg4QEBITExQVDw8ODg4NDQwLCwsJCQgIBg8PEggKCQoKCQsKCgoLFhYUFBMREA8NDAoJBgQDAAACAAAAAAP0A5YAAwBJAAABESERJxEfDjMhMz8OES8OIyEnKwEPDQN3/RJ9AQIDBAUGCAgJCQoLDAwMDQLuDQwMDAsKCQkICAYFBAMCAQECAwQFBggICQkKCwwMDA3+iX36DQwMDAsKCQkICAYFBAMCApz+SwG1ff3ODQwMDAsKCgkIBwYFBQMCAgMFBQYHCAkKCgsMDAwNAbUNDAwMCwoKCQgHBgUFAwJ9AgMFBQYHCAkKCgsMDAwAAgAAAAADdwO1ABkAIQAANxUfCSE/CTURITcjFSE1IzUjyAEBBQcICgsGBwYB9AYHBgsKCAcFAQH9kLv6Au76+okGBwYLCggHBQEBAQEBAQUHCAoLBgcGAjO7fX0/AAAAAQAAAAADdwN3ANEAABMhJz8LOwEfHR0BDx0jLw8jHx47AT8dPQEvHSMPDyeJATmKCxYXGQwNDQ0NDg0ODg8ODg4ODQ0NDA0LDAsKCwkKCAkIBwcGBQUFBAMCAgEBAgIDBAUFBQYHBwgJCAoJCwoLDAsNDA0NDQ4ODg4PGBgXFxYUFBMSEA8NDAsIB14EBAQFBgcHCAgJCQoLCwsMDA0ODQ4PDw8PEBAREBESERMTExISEhIREBAQDw8ODg0MDAsLCQoIBwcGBQQEAgICAgQEBQYHBwgKCQsLDAwNDg4PDxAQEBESEhISExMTExISExESEREREA8QDg8NDXECPooJEQ8NBQUFAwQCAgEBAgIEAwUFBQcGCAcJCQkKCgoLDAwMDA0NDQ4ODg8ODw4ODg4NDQ0MDQsMCwoLCQoICQgHBwYFBQUEAwICAQEDBQcJCwwODxESExUVFhcQEBAPDw8PDg4ODQwNCwwKCwkKCAgIBwYFBQQEAgICAgIEBAUGBwcICgkLCwwMDQ4ODw8QEBAREhISEhMTExMTExISEhIREBAQDw8ODg0MDAsLCQoIBwcGBQQEAgIBAQIEBAUHBggJCQoLCwwNcQAAAQAAAAADdwN3AAsAAAEzAyMVITUjEzM1IQGDoeS3AfSh5Lf+DAL6/gx9fQH0fQAAAwAAAAADvAO8AAsAbADWAAABIxUzFTM1MzUjNSM3Hw8dAQ8VKwEvFDUnNzU/FDsBHwUnDxIdAR8WPwcBHwI7AT8FPQEvAgE/By8WKwEPAQFZb284b284fQwKFRMSEA4NCgUEAwMCAgEBAgIDAwQFCg0OEBITFRYLDAwMDAwNDQ0MDQwMDAwLFhUTEREODAsFBAMDAgIBAQICAwMEBQsMDhERExUWCwwMDAwNDA0NDQwMDAwMpxMTEhERDxAODQ0LCwkICAYEBAICBAQGBwkJCwsNDQ4PEBEREhMTFBQUFRsaGhkYGBYVAVUEBQUGBQUFBAQCAgICBP6sEA4MCggGAwIBAgMFBgcJCQoMDA4ODxARERISFBMVFBUVFBQCpzhvbzhvWwUGDA4QEhMVFgsMDAwMDQwNDQwNDAwMDAsWFRMSEA4MCwUEAwMCAgEBAgIDAwQFCwwOEBITFRYLDAwMDA0MDQ0MDQwMDAwLFhUTEhAODAsFBAMDAgIBAQICAwMEPAYICAkLCw0NDhAPERESExMUFBQVFRQVExQSEhEREA8ODgwMCgkJBwYFAwIBAgMGCAoMDhD+rAQCAgICBAQFBQUGBQUEAVUVFhgYGRoaGxUUFBQTExIREQ8QDg0NCwsJCAgGBAQCAgQAAAAAAwAAAAADuQO8AAMAYQDLAAATITUhNx8OHQEPFSsBLxU9AT8UHwYnDxMVHxY/BwEfAjsBPwU9AS8CAT8HLxYrAQ8B7AEW/urtDBUTExAPDgsKBAMDAgEBAQICAwMEBQsMDxASExQWDAsMDA0MDQwNDQwMDAwMCxYUExIQDgwLBAQEAgICAQECAgMEBAoLDg8REhQVFwwMDAwMDRkNDA0MCwymExMREhAQDw4ODQsLCQgIBgUDAgECBAQGBwgKCgsNDQ4PEBAREhMTExQVFRoaGhkZFxYWAVEEBQUFBgUEBQMDAgICBP6vEA4NCggGAwIBAgMFBgcICQoMDA0PDw8RERISExQUFBUVFBQCbzfLBgsODxESFBYWDAwMDAwNDQwNDA0MCwwLFhUTERAODQoFBAMDAgEBAQICAwMEBQsMDxASExQWDAsMDA0MDA0NDQwMDAwMFhUUEhEPDQwJBAMDAgIBAQEBAgMEBD0GBwgJCwsMDg4PEBAREhIUExQVFBUVFBMTExIREQ8QDg0NDAoKCAcGBQQCAQEEBQgKDA4Q/qsEAgICAgQEBQUFBQYEBQFVFRYYGBkZGhsVFBQUExMSEREPDw8NDQsLCQkHBgUDAwIEAAAABQAAAAADvAO8AAMAIwArAC8ASgAAARUhNScPAh0BHwU7AT8FPQEvBSsBDwElESM1IRUjEQERIREDKwEPBhEzFSE1MxEvBiMRIQKn/rKeBAICAgIEBAUFBQYFBQQEAgICAgQEBQUGBQUFAsan/kSnAiz+sjenBgoKCQgGBALeAbzeAgQGCAkKC6z+RAFZ3t6fBAUFBQYFBQQEAgICAgQEBQUGBQUFBAQCAgICPP6yp6cBTgFN/uoBFv7qAgUGBwkKC/52b28BigsKCQgFBQIBTQAAAAABAAAAAAO8A7wACwAAASEVIREzESE1IREjAeT+YAGgOAGg/mA4Ahw4/mABoDgBoAAEAAAAAAO8A7wABwALABgAMwAAARUjNSMVIzUBESERIxEhETMRIxEhESMnESMRFyE/BhEvBiEPBgJvpzc4Ab391DcCmjje/ntSVTdvAtgKCgkIBgQCAgQGCAkKCvzwCwoKCAcFAwFZ3qen3gIs/rMBTf57AYX89gEW/upVArX9Lm8CBAYICQoKAxYKCgkIBgQCAQMFBwgKCgAAAAADAAAAAAO8A5EABwAyAGAAADchNQcVIREjBQc1Iw8OPxUzNQcrAQ8WFT8PFQkBRAKwOv3DOQMnsU8XFhYWFhUWFRUVFBQUExMFBgcJCgoMDA4OEBAREhITGRgWFxcXNDoODRsbGhkYGBcWFBQTEREPDgwLCQgEBQMCFBUWFhgYGRkaGhsbGxwcHQE7/sVvrDo5AgRWsVsCAgIEBAYGBggICQoLCwwUFBMTExEREQ8PDg0MCwkJCgcEAwIBWyIDBQYICQsNDQ8RERMUFRUXGBgZDRobG0cTExIQEA4NDAoJCAYFBAIBrAE7ATsAAAMAAAAAAvoDhAAiAEUAkAAAATMfDR0BDw4jNRMfDw8OKwE1AzsBPxU1Lw41Pw81Lw4jAckSERAPDgwLCgkIBgYEAwICAwQFBgcICgoLDA0ODxBjXhAPDg4MCwkJCAcGBAQDAQEBAgMEBQcHCQsKDA0ODhAQVG/tDhsaGRgWFRQTCAgHBwYGBQQEAwMCAQECBAUGCAoKDA0ODw8REhIPDg4NDAsKCQkHBgUEAwEBAgQGCAoLDhAREhQVFxga9wHIAQIDBAUFBwcICQoLCw0NDQwLCwoJCQgHBgUEBAIBAd4BTgEBAgMDBAUGBwcJCQkLCwwPDQwMCwoJCQcHBQQEAgLe/WUCBAYICQwNEAgICQkKCQoLCgsLCwwZExMSEBAPDg0MCgoIBwUEAwMFBwcICQoLDAwNDg4PDxAQChMSERAPDg0NCgoHBgUDAgAAAwAAAAAD9AN3AAMAHwBUAAABAyETJzMfDCEVIQ8HAxEnDwYRIRM/Aj0BLwgjNS8IJS8MIw8BA7a8/WS8JAgHBgYLCgoVBQ0OEAkKAXL+IAkJCAcHBwUFlhkFCgkGBQIBAxXMAwICAQIFBgkKCwYGhAEBBQcICgsGB/6LBwYGCwoKFQUNDhAJCr0GBgI+/okBd/oBAQIFBwcQAwcGBAIBfQEBAwQFBgcI/tMCCzoCBwkKCwYG/UoBmgcHBwcGBgYLCgkGBQIBgwcGCwoIBwUBAQEBAQIFBwcQAwcGBAIBAQIAAAAABgAAAAADaQO8AAMABwALAB8AIwBeAAAlMxEjAzMRIwMzESMlEQ8HIS8GNRElFSM1Jw8FFSMVMxEfDjMhMz8OETM1IzUvBiMHAlM4OG84OG84OAGFAQEDAwUEBQb+RAYFBAUDAwIBTaYWBQkHBgQD3jcBAQIDAwUEBgYGBwcICAgJAbwJCAgIBwcGBgYEBQMDAgEBN94DBAYHCQoLrAzqAb3+QwG9/kMBvW/9gQYFBAUDAwEBAQEDAwUEBQYCf284ODMCBggJCgo+N/2BCQgICAcHBgYGBAQEAwIBAQIDBAQFBQYGBwcICAgJAn83PgsKCAgGBAIBAAABAAAAAAO8A7wAxgAAAQ8MNSMVMzUjPw8fFw8XLx4HHx4zPxcvFyMPAQGKDg4cGhoZFxcVFBMQEDfegQ0OEBITFBUWGBgZGhsbGxwaGhoZGRcXFhUUFBIREA4ODAoJCAYFAgEBAgUGCAkKDA4OEBESFBQVFhcXGQwaGRsdEBAQEA8PDw8PDg4ODQ0MDAwLCwsKChIIBwcHBgUENgUGBwcICQkKCwsLDA0NDQ4PDg8QEBAREREREhISEhITHh4dHRwbGhkZFxYUFBIRDw4MCgkHBAMBAQMFBgkLDA0PERIUFBYXGRkaGxwdHR4eHh4dA60FBAsMDhARExQWGBgad984GRcXFRQSEQ8ODAoJBgUDAQECBQYHCQsMDQ8QERITFRUWFxcZGRkaGxobGRkYGBcWFRQTExEQDg4MCgkIAwUEAgEBAQIDBAQFBgYGBwgICQkKCgoMCwwMGg4ODg8PDw8OEhIREBEQDw8PDg4NDQwLCwsKCQkIBwcHBQUEAwMCAQEDBAcJCwwNDxESExUWFxkZGhscHR0eHh4eHR0cGxoZGRcWFBQSEQ8ODAoJBwQDAQMFAAAAAgAAAAADFQO8AAMAaAAANyE1IREfHjsBPx4RIxEPDiMvDgMj6gIs/dQBAQEDAwMFBQYGBggHCAkJCgoKCwsMDA0MDQ4NDg0PDg4ODg4NDQ0NDQwLDAoLCgkKCAkHBwcGBgUEBAMDAQEBOAIFBgkLDA0PEBITFBUWFhcWFhQVExERDw0MCgkHBAIBN0Q3AU0ODg4ODQ0NDQwMDAsLCwoJCQkICAcHBgYFBAQDAgIBAQICAwQEBQYGBwcICAkJCQoLCwsMDAwNDQ0NDg4ODgH0/gEWFhUUExERDw0MCwgHBAMDBAcICwwNDxERExQVFhYB/wAAAAEAAAAAArEDvAADAAAlMwEjAU86ASg6RAN4AAADAAAAAAOQA5AACwBMANMAAAEjFTMVMzUzNSM1IzcfCA8PLw8/Dx8GJQ8WHQEfHTM/Bx8GMz8INS8EPwcvHisBDwUBnGRkZGRkZL8HBw0LCQcFAwEBAwUHCQsNDhERERMUFBUWFRUVExMSERAPDAsJBwUDAQEDBQcJCwwPEBESExMVFRUWFRUTExER/vUPDw8NDgwMDAsLCgkJCAcHBwUFAwMCAgICAwMFBQcHBwgJCQoLCwsNDA4NDw4QEBAQEBEQEREbGRkYGBcWFqoEBQYFBgYNDAUFCgkHAwEDAwEDB6kODAsIBwQDAQEBAgMEBAYGBwcICQoJCwsMDAwODQ8PDxAQEBARERASERARERAQEAJkZGRkZGQOCAkRERMTFRUWFRUVExMREREODQsJBwUDAQEDBQcJCw0OERERExMVFRUWFRUTExEREQ4NCwkHBQMBAQMFBwkLDZEHBwgJCQoLCwsNDA4NDw8PEBAQEBEQERESEBEREBAQEA8PDw0ODA0LCwsKCQkIBwcHBQUDAwICAQMEBwgLDA6pBAMCAgIBAgIDBwkKBQUMDQwFBQqqFhYXGBgZGRsRERAREBAQEA8PDw0ODA0LCwsKCQkIBwcHBQUDAwICAgIDAwUFAAMAAAAAA5ADkAADAEQAywAAASE1ISUfCA8PLw8/Dx8GJQ8WHQEfHTM/Bx8GMz8INS8EPwcvHisBDwUBOAEs/tQBIwcHDQsJBwUDAQEDBQcJCw0OERERExQUFRYVFRUTExIREA8MCwkHBQMBAQMFBwkLDA8QERITExUVFRYVFRMTERH+9Q8PDw0ODAwMCwsKCQkIBwcHBQUDAwICAgIDAwUFBwcHCAkJCgsLCw0MDg0PDhAQEBAQERARERsZGRgYFxYWqgQFBgUGBg0MBQUKCQcDAQMDAQMHqQ4MCwgHBAMBAQECAwQEBgYHBwgJCgkLCwwMDA4NDw8PEBAQEBEREBIREBEREBAQAgBkcggJERETExUVFhUVFRMTERERDg0LCQcFAwEBAwUHCQsNDhERERMTFRUVFhUVExMREREODQsJBwUDAQEDBQcJCw2RBwcICQkKCwsLDQwODQ8PDxAQEBAREBEREhARERAQEBAPDw8NDgwNCwsLCgkJCAcHBwUFAwMCAgEDBAcICwwOqQQDAgICAQICAwcJCgUFDA0MBQUKqhYWFxgYGRkbEREQERAQEBAPDw8NDgwNCwsLCgkJCAcHBwUFAwMCAgICAwMFBQAAAgAAAAADkAOQABsAtgAANw8CFR8FIT8FNS8FIQ8BARc7AR8KDxArAS8WPwgnNw8BJyMfCRUfGj8WLwM1PwUzPwMvAQcjJyN1AgIBAQICAgMDAwYDAwICAgEBAgICAwP8+gMDAg8HOgUFBgkJAwQDAgULAQEDBAIFBwcLCw8SDA0OGBgZGwsMDAsMCwwLCA4HBgUKBgUEAwMDAgEHAQMDAwQECg0pHwEBpCyCJAImGg4MBQUCAwMCAgMFBAQFBgYHCAgKCgsMDQ4PEBASEhMTFRUlIhEPDw8bGAwLCwoSEA0LBgYHBQIDAQEIAwEBAgQBBiIKCwsMAgMKOCN1LM4CAwNJAwMCAgIBAQICAgMDSQMDAgICAQECApMBAgIFCAMJCw89fVYjHhgLDw8OEwwNDAgGBQYFAwECAwMEBQYECwYGBg8KDAwNDQ4PEJKxIAgFAgIEAQIDJgcEAQYuAwMEBAQFBBEl4jgfGhoODg0MDAsKCgkICQcIBgcFBQQEAgIBAQEEAgMEBAkKBgcHBw8QEBENDxoYESUqMLYYFRAFBQUBAQcCAgIQGwEFBQAEAAAAAAOQA5AAAwAjACcARQAAARUhNScfAh0BDwYvBj0BPwU7AR8BJRUhNQcrAQ8IETMVITUzES8HIzUhApb+1GsDAgICAgMEBAUFBQQFAwQCAgICBAMFBAUFBQQBm/7UZDIyCQ0HBgUEAwIBlgH0lgEBBQUGCAkKaf4MAZzIyKgEBAUFBQQEBAMDAQEBAQMDBAQEBQUFBAQDAgIBA+WWlpYBBQQFBgYHCAj+opaWAV4HCAsGBwUEAvoAAAEAAAAAA48DkABEAAABDwMVIw8GFR8GMxUfBjM/BjUzPwY1LwYjNS8GIw8CAawDBwQC+QsKCQgHBAICBAcICQoL+QIEBwgJCgtjCgoJCAcEAvkLCgkIBwQCAgQHCAkKC/kCBAcICQoKXgsKCgOABQkKCvoCBAcICQoLYwoKCQgHBAL5CwoJCAcEAgIEBwgJCgv5AgQHCAkKC2MKCgkIBwQC+goKCQgHBAIBAwUAAAAABQAAAAADwgPCAAMABwAJAFUAmwAAARUhNQEVIzUHNSMVHw8hPw81FxEjNS8PIQ8PFSMRNQ8PER8PIT8PETUvDzECyP5wASyWlmQBAQIEBAUGBgcICAkJCgoKASwKCgoJCQgIBwYGBQQDAwEBljIBAQMDBAUGBgcICAkJCgoK/nAKCgoJCQgIBwYGBQQDAwEBMgoKCgkJCAgHBgYFBAMDAQEBAQMDBAUGBgcICAkJCgoKArwKCgoJCQgIBwYGBQQEAgEBAgIDBAQGBp8HBwcICAgJCgFqyMgB9MjIyMjICgoKCQkICAcGBgUEAwMBAQEBAwMEBQYGBwgICQkKCgq+oP3uyAoKCgkJCAgHBgYFBAMDAQEBAQMDBAUGBgcICAkJCgoKyAK8ZAEBAgQEBQYGBwgICQkKCgr9RAoKCgkJCAgHBgYFBAQCAQEBAQIEBAUGBgcICAkJCgoKAhIKCQkJCQgHCKkHBQUFAwMCAgAAAAACAAAAAAOQA5AAbQCxAAABHwQPCC8IPQEPFhUfAQ8ELw4/Fz0BPwgfAiUPBxEfDyE/DxEvDyEPBgJ7uAQDAgEBAgMEuAUFBgcGAwgFAwMCAgEjHxsYCwoJCQgIBgcGBgYFBAMDAgIBAQIFAQIEBgQDBAMDChMRDQsIAwMBAQECAwIHBQUGBwgKCgwNDw8REhQWGBocHB8BAgIDAwUFBwcGBQX+JgoJCAYFAwIBAQIDBQYICQoLDAwNDg4PDwH0Dw8ODgwNDAsKCQgGBQMCAQECAwUGCAkKCwwNDA4ODw/+DA8PDg4NDAwDM7gFBQYHBwYFBbgEAwIBAQEDAwMEBAUEBlMBAgQFBAMEBQUGBgcICQoLDA0ODxAREhIpLwUFAwIBAQECAg8cHBsaGgwNDAwbHRsOHw8PDQ0NDA0MDAsJCQgHBgYEAwIBUwUFBQQDBAMCAgEBAgMtCwwNDQ0ODw/+DA8PDg0NDQwLCgkIBgUDAgEBAgMFBggJCgsMDQ0NDg8PAfQPDw4NDQ0MCwoJCAYFAwIBAQIDBQYICQAAAwAAAAADbgOPADEAVgC4AAABMx8TFQ8PLwYTPwITHwsPDy8BAz8BMx8BJyMHHwkTDwg3Fz8VLw8/Di8TAhEKFhcLCgkJCQkJCAkHCAUEBAMCAgEBAgQFBwgKDA0OEBITFRYYERITEwEDBAEEERdUDw4ODQ0LCQgHBQMBAQMEBgcJCgwODg4QEBIUFCAZBBQiHhEQ2Q+iAioZEwkGAQECBQQCBQMDAwUaRQHxyRcXFhUWFRUUExEQBw4MCwkDBAICAgEBAwQGBwkLDQ0PEBAREhMTDScTFQkIBgYFBQQEAwEBAQMEBggJCwsNDQ8PERARERIREkECBwMFAwMEBQYGBwkJCgsJCgoLDQ0NDxUUEhEQDg0MCgkHBgUDAgEBAwUIAhAyAQQBAwEBSwQFBggICgsNDhAQEhUTEhAODQsJBwcFBAMCAQEBAwEUAwQBAzUGKwQEBAMEAgILVv4rIR4ICAcBCA0xCwICAgMEBgcICgoMDQcPERMUCwsMDAwZExMREBAPDg4MCwsJCAcGBQYUCw8IBwcICQoLDAwMDhMSEhAQDg0MCgoJCAcGBQQDAgEBAAAAAAMAAAAAA/QDcAAqAFYAuQAAAR8GFQ8MJS8FPQE/CwMzHwYVHwYhHwYVIQ8IET8GJw8HER8PJT8OPQEvCiM1Lw8hPQEvDiMPBgOVBwUFBAMCAgEBAwSaCAgKDAsMCwv9wAYFAwMDAQIDBJoICAoMCwwLCjIFCgkIBwYDAgIEBQgICQkBOAoJCAcGAwL+bhISEhMSEA4NhgIEBQcJCQlNCAgFBQQDAQEBAQMEBQUICAgKCQsKCwsMAkMSEhMTEQ8NoQYEBQMDAQICAgQDBwkKDAwNDmsBAgIEBQYHCAkJCgoKCwwM/uMCAgQFBgcICQkKCgsLCwyoCwwLCgsJCgHfAQEBAgMDAwUEBQYFvggHBwYFBAIBAQEBAgMDAwUEBQYGvggHBwUFBAIBAU8CBAUICAkJLAoJCAcGAwICBAUICAkJWQEEBgcKCwwNpQHECQkJBwUEAiAJCQoKCgsMDP4KDAwLCgoKCQkIBwYFBAMBAQECBAcJCgwMxQgIBwgICAgICQkJCQYKCQgHBAQBVAwMCwoKCgkJCAcGBQQDAQEQDAwLCgoKCQkIBwYFBAMBAQEBAwQFBgcAAAAABQAAAAADXgOQACEAQwBlAGkAxQAAAREPBy8HET8HHwYHEQ8HLwcRPwcfBgcRDwcvBxE/Bx8GNxcjNycHIw8HFR8HMxEVHw0zITM/DTURMz8HNS8HIy8IIw8GApYBAQIDBAQFBQUFBAQDAgEBAQECAwQEBQUFBQQEAwIBfAEBAgMEBAUFBQUEBAMCAQEBAQIDBAQFBQUFBAQDAgF8AQECAwQEBQUFBQQEAwIBAQEBAgMEBAUFBQUEBAMCAbAU1xRCIn0FBQQEAwIBAQEBAgMEBAUFGQIBAwMEBAUFBgYHBwcHCAHCCAcHBwcGBgUFBAQDAwECGQUFBAQDAgEBAQECAwQEBQWWIgQFBwcICAkKvwkKCAgHBwUCcP68BgQEBAMDAQEBAQMDBAQEBgFEBgQEBAMDAQEBAQMDBAQEBv68BgQEBAMDAQEBAQMDBAQEBgFEBgQEBAMDAQEBAQMDBAQEBv68BgQEBAMDAQEBAQMDBAQEBgFEBgQEBAMDAQEBAQMDBAQEzzIyJFYBAQIDBAQFBRkFBQQEAwIBAf3zCAcHBwcGBgUFBAQDAwECAgEDAwQEBQUGBgcHBwcIAg0BAQIDBAQFBRkFBQQEAwIBAVYICAcFBQMCAQECAwUFBwgAAAAAAQAAAAADjwOPAOgAAAEPBy8DKwEPBx0BHwY7Aj8ILwQ/Bx8dDx4vESsBDwUVHxAzPx4vHisBDwUBbBIRERAPEA4OSAQFBAUEBQoEBAMCAgEBAgMEBQYGBuoFBQQEBAMDBAEBAQECA0sTFBUXGBgZGQ0ODQ0NDA0MGAsLCwoJCQkJBwgHBgYKBQMDAwEBAQEBAQMDAwUKBgYHCAcJCQkJCgsLCwwMDA0MDQ0NDg0PEA8ODw4ODg4NDAwMCgsMAgQDBAQDAkgDAQMPDxARERMTFBQUFRUWFhYWFBQUExQTEhMSEhEQEA8ODg0MDAsKCgkICAYGBAMDAQEBAQMDBAYGCAgJCgoLDAwNDg4PEBAREhITEhMUExQUFBMTExITEhIDcwcJCQoKCw0MRgMCAgEEAwMEBAQFBukGBwUFBQMCAQICAwQECgQFBQQEBUsRDgwKCAYEAQEBAQIDBAQFDAYHBwgJCAkKCgsKDAsZDA0NDQ0NDg0ODQ0NDA0YDAsLCwoJCggJBwgHBgYGBAUDAwMBAQEBAQIDBAUFBggHCQkKCwsOAgIBAQJIBQYGBhAQDw4NCwsKCQgGBgQDAQECAgQEBgYICAkKCgsMDA0ODg8QEBESEhITExQTFBQUFBQUExQTExISEhEQEA8ODg0MDAsKCgkICAYGBAQCAgICAwQFBgABAAAAAAMKA48AKAAAATMfBBUHCwEPBjcfAj8CLwE3Ez8GBysBLwEBkAYiGg8HBwM1QwUGBg8QRgl7giwiJgYCYAEIWRkIBAtjBgSNGR8gjANaAwQDAwMNF/7x/soPDAoHBRItCgEGBAIbGBAPLwGZiiEKBB0YFggBBwAABAAAAAAEAAQAAAMABwALACMAAAEVITUhFSE1ARUhNQMzFSERIxEhESM1IRUjESERIxEhNTMRIQPA/wD+gP8AAkD+wEDA/sCAAYDAAoDAAYCA/oDA/kABAMDAwMACwMDA/wCA/wD+wAFAwMD+wAFAAQCAAUAAAAAAAQAAAAAEAAQAAHYAAAEHIREhLwcPDx8PPw8hETMfDz8PLw8PBgMSAf7v/u8LCwwNDw8REQ0NDAwLCwkKCAcHBQQDAgEBAgMEBQcHCAoJCwsMDA0NDQ0MDAsLCQoIBwcFBAMCAQFAwAECAwQFBwcICgkLCwwMDQ0NDQwMCwsJCggHBwUEAwIBAQIDBAUHBwgKCQsLDAwNDRERDw8NDAsDwgL9ABAMCgkHBgMBAQIDBAUHBwgKCQsLDAwNDQ0NDAwLCwkKCAcHBQQDAgEBAgMEBQcHCAoJCwsMDA0NAwANDQwMCwsJCggHBwUEAwIBAQIDBAUHBwgKCQsLDAwNDQ0NDAwLCwkKCAcHBQQDAgEBAwYHCQoMAAAAAAQAAAAAA/8EAAAWAFcAbQCrAAABDwEVHxAFAQUVDw8vDz8PHw4DEQ8PJwMjEQMzAyEnHwEzPx09AS8TESEBwgEBAQIDBQYHCAoKDAwNDw8PEjP92QEcAkABBAUICQsNDxAREhQUFhYXFxYVFRQSERAPDQsJCAUEAQEEBQgJCw0PEBESFBUVFhcXFhYUFBIREA8NCwkIBQT/FxESEBEPEA4ODQ0LCwsJC1uMtEDS0gMARxUSDw4PDg4NDg0NDAwMCwsKCwkJCQgHBwcFBQUEAwMBAgECAgMDBAkMDQ8RExQVFxgZDA0S/QABwgcNDhQUFBMSEhIQEA8PDQ0MCwphAQIAoAwLFhYUFBIREA8NCwkIBQQBAQQFCAkLDQ8QERIUFBYWFxcWFhQUEhEQDw0LCQgFBAEBBAUICQsNDxAREhQUFhYCCf7+AwQFBgcICQoLDAwNDg4PFqf/AAIA/cD+gIMCAQECAwMEBQUFBwcHCAkJCQoLCwsMDAwNDQ0ODg4PDg8ODQ0ODA0NGBcWFBMSEA4MCggDAwIBQgAAAAAAABIA3gABAAAAAAAAAAEAAAABAAAAAAABABsAAQABAAAAAAACAAcAHAABAAAAAAADABsAIwABAAAAAAAEABsAPgABAAAAAAAFAAsAWQABAAAAAAAGABsAZAABAAAAAAAKACwAfwABAAAAAAALABIAqwADAAEECQAAAAIAvQADAAEECQABADYAvwADAAEECQACAA4A9QADAAEECQADADYBAwADAAEECQAEADYBOQADAAEECQAFABYBbwADAAEECQAGADYBhQADAAEECQAKAFgBuwADAAEECQALACQCEyBOZXcgTWF0ZXJpYWxfRGlhZ3JhbUJ1aWxkZXJSZWd1bGFyTmV3IE1hdGVyaWFsX0RpYWdyYW1CdWlsZGVyTmV3IE1hdGVyaWFsX0RpYWdyYW1CdWlsZGVyVmVyc2lvbiAxLjBOZXcgTWF0ZXJpYWxfRGlhZ3JhbUJ1aWxkZXJGb250IGdlbmVyYXRlZCB1c2luZyBTeW5jZnVzaW9uIE1ldHJvIFN0dWRpb3d3dy5zeW5jZnVzaW9uLmNvbQAgAE4AZQB3ACAATQBhAHQAZQByAGkAYQBsAF8ARABpAGEAZwByAGEAbQBCAHUAaQBsAGQAZQByAFIAZQBnAHUAbABhAHIATgBlAHcAIABNAGEAdABlAHIAaQBhAGwAXwBEAGkAYQBnAHIAYQBtAEIAdQBpAGwAZABlAHIATgBlAHcAIABNAGEAdABlAHIAaQBhAGwAXwBEAGkAYQBnAHIAYQBtAEIAdQBpAGwAZABlAHIAVgBlAHIAcwBpAG8AbgAgADEALgAwAE4AZQB3ACAATQBhAHQAZQByAGkAYQBsAF8ARABpAGEAZwByAGEAbQBCAHUAaQBsAGQAZQByAEYAbwBuAHQAIABnAGUAbgBlAHIAYQB0AGUAZAAgAHUAcwBpAG4AZwAgAFMAeQBuAGMAZgB1AHMAaQBvAG4AIABNAGUAdAByAG8AIABTAHQAdQBkAGkAbwB3AHcAdwAuAHMAeQBuAGMAZgB1AHMAaQBvAG4ALgBjAG8AbQAAAAACAAAAAAAAAAoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACgBAgEDAQQBBQEGAQcBCAEJAQoBCwEMAQ0BDgEPARABEQESARMBFAEVARYBFwEYARkBGgEbARwBHQEeAR8BIAEhASIBIwEkASUBJgEnASgBKQAHWm9vbUluTQhab29tT3V0TQpVbmRlcmxpbmVNBlByaW50TQROZXdNBVNhdmVNB0V4cG9ydE0FQm9sZE0LT3BlbkZvbGRlck0HRGVsZXRlTQhSZWZyZXNoTQdJdGFsaWNNB1pvb21JbkYIWm9vbU91dEYGUHJpbnRGBE5ld0YFU2F2ZUYHRXhwb3J0RgVCb2xkRgtPcGVuRm9sZGVyRgdEZWxldGVGCFJlZnJlc2hGClVuZGVybGluZUYHSXRhbGljRgdab29tSW5CCFpvb21PdXRCClVuZGVybGluZUIGUHJpbnRCBE5ld0IFU2F2ZUIHRXhwb3J0QgVCb2xkQgtPcGVuRm9sZGVyQgdEZWxldGVCCFJlZnJlc2hCB0l0YWxpY0IKRmxvd1NoYXBlcwlDb25uZWN0b3ILQmFzaWNTaGFwZXMAAAAAAA==) format('truetype');
            font-weight: normal;
            font-style: normal;
        }

        @font-face {
            font-family: 'Bootstrap5 Diagram Builder';
            src:
                url(data:application/x-font-ttf;charset=utf-8;base64,) format('truetype');
            font-weight: normal;
            font-style: normal;
        }

        [class^="sf-icon-"],
        [class*=" sf-icon-"] {
            font-family: 'Bootstrap5 Diagram Builder' !important;
            speak: none;
            font-size: 55px;
            font-style: normal;
            font-weight: normal;
            font-variant: normal;
            text-transform: none;
            line-height: 1;
            -webkit-font-smoothing: antialiased;
            -moz-osx-font-smoothing: grayscale;
        }

        .sf-icon-align-left-1:before {
            content: "\e8bc";
        }

        .sf-icon-align-middle-1:before {
            content: "\e8bd";
        }

        .sf-icon-align-right-1:before {
            content: "\e8be";
        }

        .sf-icon-align-top-1:before {
            content: "\e8bf";
        }

        .sf-icon-align-center-1:before {
            content: "\e8c0";
        }

        .sf-icon-align-bottom-1:before {
            content: "\e8c1";
        }

        .sf-icon-distribute-vertical:before {
            content: "\e8c2";
        }

        .sf-icon-distribute-horizontal:before {
            content: "\e8c3";
        }

        .sf-icon-elipse:before {
            content: "\e8c4";
        }

        .sf-icon-line-1:before {
            content: "\e8c5";
        }

        .sf-icon-orthogonal:before {
            content: "\e8c6";
        }

        .sf-icon-bezier:before {
            content: "\e8c7";
        }

        .sf-icon-same-width:before {
            content: "\e8c8";
        }

        .sf-icon-same-height:before {
            content: "\e8c9";
        }

        .sf-icon-same-size:before {
            content: "\e8ca";
        }

        .e-ddb-icons {
            font-family: 'e-ddb-icons';
            speak: none;
            font-size: 16px;
            font-style: normal;
            font-weight: normal;
            font-variant: normal;
            text-transform: none;
            line-height: 1;
            -webkit-font-smoothing: antialiased;
            -moz-osx-font-smoothing: grayscale;
        }

        .e-basic::before {
            content: "\e726";
        }

        .e-flow::before {
            content: "\e724";
        }

        .e-connector::before {
            content: "\e725";
        }

        .e-export::before {
            content: "\e711";
        }

        .material .e-export::before {
            content: "\e706";
        }

        .bootstrap .e-export::before {
            content: "\e71e";
        }

        .e-file-select-wrap {
            display: none;
        }

        .e-btn,
        .e-css.e-btn {
            background-color: transparent;
            border-color: transparent;
        }

        .bootstrap5 .e-btn,
        .e-css.e-btn {
            color: #333;
        }

        .bootstrap4 .e-btn,
        .e-css.e-btn {
            color: #333;
        }

        .bootstrap5 .e-btn:hover {
            color: #fff;
        }

        .bootstrap4 .e-btn:hover {
            color: #fff;
        }
    </style>
</head>

<body>
    <input type="hidden" name="businessId" value="{{ $id }}" id="businessId">
    <div class="stackblitz-container bootstrap5">
        <div class="control-section">
            <link href="{{ asset('packages/workdo/BusinessProcessMapping/src/Resources/assets/css/diagram-common.css') }}"
                rel="stylesheet">
            <div style="width: 100%;">
                <div style="display: none;"><input type="file" id="fileupload" name="UploadFiles"></div>
                <div class="db-toolbar-editor" style="width: 100%; height:42px;">
                    <div class="db-toolbar-container">
                        <div id="toolbarEditor"></div>
                    </div>
                </div>
                <div class="sb-mobile-palette-bar">
                    <div id="palette-icon" style="float: right;" role="button" class="e-ddb-icons1 e-toggle-palette">
                    </div>
                </div>
                <div id="palette-space" class="sb-mobile-palette">
                    <div id="symbolpalette" style="width:90%;"></div>
                </div>
                <div id="diagram-space" class="sb-mobile-diagram">
                    <div id="diagram"></div>
                </div>
            </div>
        </div>

    </div>

    <script src="{{ asset('packages/workdo/BusinessProcessMapping/src/Resources/assets/js/datasource.js') }}" type="text/javascript"></script>
    <script src="{{ asset('packages/workdo/BusinessProcessMapping/src/Resources/assets/js/jquery.min.js') }}"></script>
    <script src="{{ asset('assets/js/plugins/bootstrap.min.js') }}"></script>
    <script src="{{ asset('packages/workdo/BusinessProcessMapping/src/Resources/assets/js/ej2.min.js') }}" type="text/javascript">
    </script>
    <script src="{{ asset('js/custom.js') }}"></script>
    @if ($message = Session::get('success'))
        <script>
            toastrs('Success', '{!! $message !!}', 'success');
        </script>
    @endif
    @if ($message = Session::get('error'))
        <script>
            toastrs('Error', '{!! $message !!}', 'error');
        </script>
    @endif
    <script>
        /**
         * Default FlowShape sample
         */

        ej.diagrams.Diagram.Inject(ej.diagrams.UndoRedo, ej.diagrams.PrintAndExport);

        //Create and add ports for node.
        function getNodePorts(obj) {
            var ports = [{
                    id: 'nport1',
                    shape: 'Circle',
                    offset: {
                        x: 0,
                        y: 0.5
                    }
                },
                {
                    id: 'nport2',
                    shape: 'Circle',
                    offset: {
                        x: 0.5,
                        y: 1
                    }
                },
                {
                    id: 'nport3',
                    shape: 'Circle',
                    offset: {
                        x: 1,
                        y: 0.5
                    }
                },
                {
                    id: 'nport4',
                    shape: 'Circle',
                    offset: {
                        x: 0.5,
                        y: 0
                    }
                }
            ];
            return ports;
        }

        function addEvents() {
            var isMobile = window.matchMedia('(max-width:550px)').matches;
            if (isMobile) {
                var pIcon = document.getElementById('palette-icon');
                if (pIcon) {
                    pIcon.addEventListener('click', openPalette, false);
                }
            }
        }

        function openPalette() {
            var pSpace = document.getElementById('palette-space');
            isMobile = window.matchMedia('(max-width:550px)').matches;
            if (isMobile) {
                if (!pSpace.classList.contains('sb-mobile-palette-open')) {
                    pSpace.classList.add('sb-mobile-palette-open');
                } else {
                    pSpace.classList.remove('sb-mobile-palette-open');
                }
            }
        }



        if (this.location.href) {
            if (this.location.href.includes('bootstrap5')) {
                document.getElementById('change_themes').href =
                    '../../src/diagram/styles/Diagram_Builder_EJ2_Icon/Font/Bootstrap5_Diagram_Builder/style.css';
            } else if (this.location.href.includes('bootstrap4')) {
                document.getElementById('change_themes').href =
                    '../../src/diagram/styles/Diagram_Builder_EJ2_Icon/Font/bootstrap4_Diagram_Builder/style.css';
            } else if (this.location.href.includes('bootstrap')) {
                document.getElementById('change_themes').href =
                    '../../src/diagram/styles/Diagram_Builder_EJ2_Icon/Font/Bootstrap_Diagram_Builder/style.css';
            } else if (this.location.href.includes('material3')) {
                document.getElementById('change_themes').href =
                    '../../src/diagram/styles/Diagram_Builder_EJ2_Icon/Font/Material3_Diagram_Builder/style.css';
            } else if (this.location.href.includes('material')) {
                document.getElementById('change_themes').href =
                    '../../src/diagram/styles/Diagram_Builder_EJ2_Icon/Font/Material_Diagram_Builder/style.css';
            } else if (this.location.href.includes('fabric')) {
                document.getElementById('change_themes').href =
                    '../../src/diagram/styles/Diagram_Builder_EJ2_Icon/Font/fabric_Diagram_Builder/style.css';
            } else if (this.location.href.includes('tailwind')) {
                document.getElementById('change_themes').href =
                    '../../src/diagram/styles/Diagram_Builder_EJ2_Icon/Font/Tailwind_Diagram_Builder/style.css';
            } else if (this.location.href.includes('fusion')) {
                document.getElementById('change_themes').href =
                    '../../src/diagram/styles/Diagram_Builder_EJ2_Icon/Font/Fusion_Diagram_Builder/style.css';
            } else if (this.location.href.includes('highcontrast')) {
                document.getElementById('change_themes').href =
                    '../../src/diagram/styles/Diagram_Builder_EJ2_Icon/Font/HighContrast_Diagram_Builder/style.css';
            } else if (this.location.href.includes('fluent')) {
                document.getElementById('change_themes').href =
                    '../../src/diagram/styles/Diagram_Builder_EJ2_Icon/Font/Fluent_Diagram_Builder/style.css';
            }

        }

        var bounds = document.getElementById('diagram-space').getBoundingClientRect();
        var centerX = bounds.width / 2;
        //Initializes the nodes for the diagram
        var nodes = [{
            id: 'NewIdea',
            height: 60,
            offsetX: centerX - 50,
            offsetY: 80,
            shape: {
                type: 'Flow',
                shape: 'Terminator'
            },
            annotations: [{
                content: 'Place Order'
            }]
        }, {
            id: 'Meeting',
            height: 60,
            offsetX: centerX - 50,
            offsetY: 160,
            shape: {
                type: 'Flow',
                shape: 'Process'
            },
            annotations: [{
                content: 'Start Transaction'
            }]
        }, {
            id: 'BoardDecision',
            height: 60,
            offsetX: centerX - 50,
            offsetY: 240,
            shape: {
                type: 'Flow',
                shape: 'Process'
            },
            annotations: [{
                content: 'Verification'
            }]
        }, {
            id: 'Project',
            height: 60,
            offsetX: centerX - 50,
            offsetY: 330,
            shape: {
                type: 'Flow',
                shape: 'Decision'
            },
            annotations: [{
                content: 'Credit card valid?'
            }]
        }, {
            id: 'End',
            height: 60,
            offsetX: centerX - 50,
            offsetY: 430,
            shape: {
                type: 'Flow',
                shape: 'Decision'
            },
            annotations: [{
                content: 'Funds available?'
            }]
        }, {
            id: 'node11',
            height: 60,
            offsetX: (centerX - 50) + 230,
            offsetY: 330,
            shape: {
                type: 'Flow',
                shape: 'Process'
            },
            annotations: [{
                content: 'Enter payment method'
            }]
        }, {
            id: 'transaction_entered',
            height: 60,
            offsetX: (centerX - 50),
            offsetY: 630,
            shape: {
                type: 'Flow',
                shape: 'Terminator'
            },
            annotations: [{
                content: 'Log transaction'
            }]
        }, {
            id: 'node12',
            height: 60,
            offsetX: (centerX - 50) + 180,
            offsetY: 630,
            shape: {
                type: 'Flow',
                shape: 'Process'
            },
            annotations: [{
                content: 'Reconcile the entries'
            }]
        }, {
            id: 'transaction_completed',
            height: 60,
            offsetX: (centerX - 50),
            offsetY: 530,
            shape: {
                type: 'Flow',
                shape: 'Process'
            },
            annotations: [{
                content: 'Complete Transaction'
            }]
        }, {
            id: 'data',
            height: 45,
            offsetX: (centerX - 50) - 190,
            offsetY: 530,
            shape: {
                type: 'Flow',
                shape: 'Data'
            },
            annotations: [{
                content: 'Send e-mail',
                margin: {
                    left: 25,
                    right: 25
                }
            }]
        }, {
            id: 'node10',
            height: 70,
            offsetX: (centerX - 50) + 175,
            offsetY: 530,
            shape: {
                type: 'Flow',
                shape: 'DirectData'
            },
            annotations: [{
                content: 'Customer Database',
                margin: {
                    left: 25,
                    right: 25
                }
            }]
        }];
        //Initializes the Connectors for the diagram
        var connectors = [{
                id: 'connector1',
                sourceID: 'NewIdea',
                targetID: 'Meeting'
            },
            {
                id: 'connector2',
                sourceID: 'Meeting',
                targetID: 'BoardDecision'
            },
            {
                id: 'connector3',
                sourceID: 'BoardDecision',
                targetID: 'Project'
            },
            {
                id: 'connector4',
                sourceID: 'Project',
                annotations: [{
                    content: 'Yes',
                    style: {
                        fill: 'white'
                    }
                }],
                targetID: 'End'
            },
            {
                id: 'connector5',
                sourceID: 'End',
                annotations: [{
                    content: 'Yes',
                    style: {
                        fill: 'white'
                    }
                }],
                targetID: 'transaction_completed'
            },
            {
                id: 'connector6',
                sourceID: 'transaction_completed',
                targetID: 'transaction_entered'
            },
            {
                id: 'connector7',
                sourceID: 'transaction_completed',
                targetID: 'data'
            },
            {
                id: 'connector8',
                sourceID: 'transaction_completed',
                targetID: 'node10'
            },
            {
                id: 'connector9',
                sourceID: 'node11',
                type: 'Orthogonal',
                targetID: 'Meeting',
                segments: [{
                    direction: 'Top',
                    type: 'Orthogonal',
                    length: 120
                }]
            },
            {
                id: 'connector10',
                sourceID: 'End',
                type: 'Orthogonal',
                annotations: [{
                    content: 'No',
                    style: {
                        fill: 'white'
                    }
                }],
                targetID: 'node11',
                segments: [{
                    direction: 'Right',
                    type: 'Orthogonal',
                    length: 100
                }]
            },
            {
                id: 'connector11',
                sourceID: 'Project',
                type: 'Orthogonal',
                annotations: [{
                    content: 'No',
                    style: {
                        fill: 'white'
                    }
                }],
                targetID: 'node11'
            },
            {
                id: 'connector12',
                style: {
                    strokeDashArray: '2,2'
                },
                sourceID: 'transaction_entered',
                targetID: 'node12'
            }
        ];
        var interval = [1, 9, 0.25, 9.75, 0.25, 9.75, 0.25, 9.75, 0.25, 9.75, 0.25, 9.75, 0.25, 9.75, 0.25, 9.75, 0.25,
            9.75, 0.25, 9.75
        ];
        var gridlines = {
            lineColor: '#e0e0e0',
            lineIntervals: interval
        };
        //Initializes diagram control
        var diagram = new ej.diagrams.Diagram({
            width: '100%',
            height: '700px',
            nodes: JSON.parse('{!! $nodes !!}'), // Parse the JSON string
            connectors: JSON.parse('{!! $connectors !!}'), // Parse the JSON string
            drawingObject: {},
            selectionChange: function(args) {
                selectionChange(args);
            },
            historyChange: function(args) {
                historyChange(args);
            },
            tool: ej.diagrams.DiagramTools.Default,
            snapSettings: {
                horizontalGridlines: gridlines,
                verticalGridlines: gridlines
            },
            //Sets the default values of a node
            getNodeDefaults: function(node) {
                if (node.width === undefined) {
                    node.width = 145;
                }
                node.style = {
                    fill: '#357BD2',
                    strokeColor: 'white'
                };
                for (var i = 0; i < node.annotations.length; i++) {
                    node.annotations[i].style = {
                        color: 'white',
                        fill: 'transparent',
                    };
                }
                //Set ports
                node.ports = getNodePorts(node);
                return node;
            },
            //Sets the default values of a Connector.
            getConnectorDefaults: function(obj) {
                if (obj.id.indexOf('connector') !== -1) {
                    obj.targetDecorator = {
                        shape: 'Arrow',
                        width: 10,
                        height: 10
                    };
                }
            },
            scrollChange: function(args) {
                if (args.panState !== 'Start') {
                    var zoomCurrentValue = document.getElementById("btnZoomIncrement").ej2_instances[0];
                    zoomCurrentValue.content = Math.round(diagram.scrollSettings.currentZoom * 100) + ' %';
                }
            },
            //Sets the Node style for DragEnter element.
            dragEnter: function(args) {
                var obj = args.element;
                if (obj instanceof ej.diagrams.Node) {
                    var oWidth = obj.width;
                    var oHeight = obj.height;
                    var ratio = 100 / obj.width;
                    obj.width = 100;
                    obj.height *= ratio;
                    obj.offsetX += (obj.width - oWidth) / 2;
                    obj.offsetY += (obj.height - oHeight) / 2;
                    obj.style = {
                        fill: '#357BD2',
                        strokeColor: 'white'
                    };
                }
            }
        });
        diagram.appendTo('#diagram');

        function selectionChange(args) {
            if (args.state === 'Changed') {
                var selectedItems = diagram.selectedItems.nodes;
                selectedItems = selectedItems.concat(diagram.selectedItems.connectors);
                if (selectedItems.length === 0) {
                    toolbarObj.items[6].disabled = true;
                    toolbarObj.items[7].disabled = true;
                    toolbarObj.items[19].disabled = true;
                    toolbarObj.items[20].disabled = true;
                    toolbarObj.items[25].disabled = true;
                    toolbarObj.items[29].disabled = true;
                    toolbarObj.items[31].disabled = true;
                    disableMultiselectedItems();
                }
                if (selectedItems.length === 1) {

                    enableItems();
                    disableMultiselectedItems();

                    if (selectedItems[0].children !== undefined && selectedItems[0].children.length > 0) {
                        toolbarObj.items[27].disabled = false;
                    } else {
                        toolbarObj.items[27].disabled = true;
                    }

                }

                if (selectedItems.length > 1) {
                    enableItems();
                    toolbarObj.items[22].disabled = false;
                    toolbarObj.items[23].disabled = false;
                    toolbarObj.items[27].disabled = false;
                    if (selectedItems.length > 2) {
                        toolbarObj.items[23].disabled = false;
                    } else {
                        toolbarObj.items[23].disabled = true;
                    }
                }

            }
        }

        function historyChange(args) {
            if (diagram.historyManager.undoStack.length > 0) {
                toolbarObj.items[10].disabled = false;
            } else {
                toolbarObj.items[10].disabled = true;
            }
            if (diagram.historyManager.redoStack.length > 0) {
                toolbarObj.items[11].disabled = false;
            } else {
                toolbarObj.items[11].disabled = true;
            }
        }

        function enableItems() {
            toolbarObj.items[6].disabled = false;
            toolbarObj.items[7].disabled = false;
            toolbarObj.items[19].disabled = false;
            toolbarObj.items[20].disabled = false;
            toolbarObj.items[25].disabled = false;
            toolbarObj.items[29].disabled = false;
            toolbarObj.items[31].disabled = false;
        }

        function disableMultiselectedItems() {
            toolbarObj.items[22].disabled = true;
            toolbarObj.items[23].disabled = true;
            toolbarObj.items[27].disabled = true;
        }

        //Initialize the flowshapes for the symbol palatte
        var shapes = [{
                id: 'terminator',
                shape: {
                    type: 'Flow',
                    shape: 'Terminator'
                }
            },
            {
                id: 'process',
                shape: {
                    type: 'Flow',
                    shape: 'Process'
                }
            },
            {
                id: 'decision',
                shape: {
                    type: 'Flow',
                    shape: 'Decision'
                }
            },
            {
                id: 'document',
                shape: {
                    type: 'Flow',
                    shape: 'Document'
                }
            },
            {
                id: 'preDefinedProcess',
                shape: {
                    type: 'Flow',
                    shape: 'PreDefinedProcess'
                }
            },
            {
                id: 'paperTap',
                shape: {
                    type: 'Flow',
                    shape: 'PaperTap'
                }
            },
            {
                id: 'directData',
                shape: {
                    type: 'Flow',
                    shape: 'DirectData'
                }
            },
            {
                id: 'sequentialData',
                shape: {
                    type: 'Flow',
                    shape: 'SequentialData'
                }
            },
            {
                id: 'sort',
                shape: {
                    type: 'Flow',
                    shape: 'Sort'
                }
            },
            {
                id: 'multiDocument',
                shape: {
                    type: 'Flow',
                    shape: 'MultiDocument'
                }
            },
            {
                id: 'collate',
                shape: {
                    type: 'Flow',
                    shape: 'Collate'
                }
            },
            {
                id: 'summingJunction',
                shape: {
                    type: 'Flow',
                    shape: 'SummingJunction'
                }
            },
            {
                id: 'or',
                shape: {
                    type: 'Flow',
                    shape: 'Or'
                }
            },
            {
                id: 'internalStorage',
                shape: {
                    type: 'Flow',
                    shape: 'InternalStorage'
                }
            },
            {
                id: 'extract',
                shape: {
                    type: 'Flow',
                    shape: 'Extract'
                }
            },
            {
                id: 'manualOperation',
                shape: {
                    type: 'Flow',
                    shape: 'ManualOperation'
                }
            },
            {
                id: 'merge',
                shape: {
                    type: 'Flow',
                    shape: 'Merge'
                }
            },
            {
                id: 'offPageReference',
                shape: {
                    type: 'Flow',
                    shape: 'OffPageReference'
                }
            },
            {
                id: 'sequentialAccessStorage',
                shape: {
                    type: 'Flow',
                    shape: 'SequentialAccessStorage'
                }
            },
            {
                id: 'annotation',
                shape: {
                    type: 'Flow',
                    shape: 'Annotation'
                }
            },
            {
                id: 'annotation2',
                shape: {
                    type: 'Flow',
                    shape: 'Annotation2'
                }
            },
            {
                id: 'data',
                shape: {
                    type: 'Flow',
                    shape: 'Data'
                }
            },
            {
                id: 'card',
                shape: {
                    type: 'Flow',
                    shape: 'Card'
                }
            },
            {
                id: 'delay',
                shape: {
                    type: 'Flow',
                    shape: 'Delay'
                }
            },
        ];
        //Initializes connector symbols for the symbol palette
        var connectorSymbols = [{
                id: 'Link1',
                type: 'Orthogonal',
                sourcePoint: {
                    x: 0,
                    y: 0
                },
                targetPoint: {
                    x: 60,
                    y: 60
                },
                style: {
                    strokeWidth: 1,
                    strokeColor: '#757575'
                },
                targetDecorator: {
                    shape: 'Arrow',
                    style: {
                        strokeColor: '#757575',
                        fill: '#757575'
                    }
                }
            },
            {
                id: 'link3',
                type: 'Orthogonal',
                sourcePoint: {
                    x: 0,
                    y: 0
                },
                targetPoint: {
                    x: 60,
                    y: 60
                },
                targetDecorator: {
                    shape: 'None'
                },
                style: {
                    strokeWidth: 1,
                    strokeColor: '#757575'
                }
            },
            {
                id: 'Link21',
                type: 'Straight',
                sourcePoint: {
                    x: 0,
                    y: 0
                },
                targetPoint: {
                    x: 60,
                    y: 60
                },
                style: {
                    strokeWidth: 1,
                    strokeColor: '#757575'
                },
                targetDecorator: {
                    shape: 'Arrow',
                    style: {
                        strokeColor: '#757575',
                        fill: '#757575'
                    }
                }
            },
            {
                id: 'link23',
                type: 'Straight',
                sourcePoint: {
                    x: 0,
                    y: 0
                },
                targetPoint: {
                    x: 60,
                    y: 60
                },
                targetDecorator: {
                    shape: 'None'
                },
                style: {
                    strokeWidth: 1,
                    strokeColor: '#757575'
                },
            },
            {
                id: 'link33',
                type: 'Bezier',
                sourcePoint: {
                    x: 0,
                    y: 0
                },
                targetPoint: {
                    x: 60,
                    y: 60
                },
                targetDecorator: {
                    shape: 'None'
                },
                style: {
                    strokeWidth: 1,
                    strokeColor: '#757575'
                },
            },
        ];
        //Initializes the symbol palette
        var palette = new ej.diagrams.SymbolPalette({
            expandMode: 'Multiple',
            palettes: [{
                    id: 'flow',
                    expanded: true,
                    symbols: shapes,
                    iconCss: 'e-ddb-icons e-flow',
                    title: 'Flow Shapes'
                },
                {
                    id: 'connectors',
                    expanded: true,
                    symbols: connectorSymbols,
                    iconCss: 'e-ddb-icons e-connector',
                    title: 'Connectors'
                }
            ],
            width: '100%',
            height: '700px',
            symbolHeight: 60,
            symbolWidth: 60,
            getNodeDefaults: function(symbol) {
                if (symbol.id === 'terminator' || symbol.id === 'process') {
                    symbol.width = 80;
                    symbol.height = 40;
                } else if (symbol.id === 'decision' || symbol.id === 'document' || symbol.id ===
                    'preDefinedProcess' ||
                    symbol.id === 'paperTap' || symbol.id === 'directData' || symbol.id === 'multiDocument' ||
                    symbol.id === 'data') {
                    symbol.width = 50;
                    symbol.height = 40;
                } else {
                    symbol.width = 50;
                    symbol.height = 50;
                }
                symbol.style.strokeColor = '#757575';
            },
            symbolMargin: {
                left: 15,
                right: 15,
                top: 15,
                bottom: 15
            },
            getSymbolInfo: function(symbol) {
                return {
                    fit: true
                };
            }
        });
        palette.appendTo('#symbolpalette');
        addEvents();

        function toolbarItems() {
            var items = [{
                    prefixIcon: 'e-icons e-circle-add',
                    tooltipText: 'New Diagram'
                },
                {
                    prefixIcon: 'e-icons e-folder-open',
                    tooltipText: 'Open Diagram',
                },
                {
                    prefixIcon: 'e-icons e-save',
                    tooltipText: 'Save Diagram'
                },
                {
                    prefixIcon: 'e-print e-icons',
                    tooltipText: 'Print Diagram'
                },
                {
                    type: 'Input',
                    tooltipText: 'Download Diagram',
                    template: '<button id="exportBtn" style="width:100%;"></button>'
                },
                {
                    type: 'Separator'
                },
                {
                    disabled: true,
                    prefixIcon: 'e-cut e-icons',
                    tooltipText: 'Cut',
                    cssClass: 'tb-item-middle tb-item-lock-category'
                },
                {
                    disabled: true,
                    prefixIcon: 'e-copy e-icons',
                    tooltipText: 'Copy',
                    cssClass: 'tb-item-middle tb-item-lock-category'
                },
                {
                    prefixIcon: 'e-icons e-paste',
                    tooltipText: 'Paste',
                    disabled: true
                },
                {
                    type: 'Separator'
                },
                {
                    disabled: true,
                    prefixIcon: 'e-icons e-undo tb-icons',
                    tooltipText: 'Undo',
                    cssClass: 'tb-item-start tb-item-undo'
                },
                {
                    disabled: true,
                    prefixIcon: 'e-icons e-redo tb-icons',
                    tooltipText: 'Redo',
                    cssClass: 'tb-item-end tb-item-redo'
                },
                {
                    type: 'Separator',
                },
                {
                    prefixIcon: 'e-pan e-icons',
                    tooltipText: 'Pan Tool',
                    cssClass: 'tb-item-start pan-item'
                },
                {
                    prefixIcon: 'e-mouse-pointer e-icons',
                    tooltipText: 'Select Tool',
                    cssClass: 'tb-item-middle tb-item-selected'
                },
                {
                    tooltipText: 'Draw Connectors',
                    template: '<button id="conTypeBtn" style="width:100%;"></button>',
                    cssClass: 'tb-item-middle'
                },
                {
                    tooltipText: 'Draw Shapes',
                    template: '<button id="shapesBtn" style="width:100%;"></button>',
                    cssClass: 'tb-item-middle'
                },
                {
                    prefixIcon: 'e-caption e-icons',
                    tooltipText: 'Text Tool',
                    cssClass: 'tb-item-end'
                },
                {
                    type: 'Separator',
                },
                {
                    disabled: true,
                    prefixIcon: 'e-icons e-lock',
                    tooltipText: 'Lock',
                    cssClass: 'tb-item-middle tb-item-lock-category'
                },
                {
                    disabled: true,
                    prefixIcon: 'e-trash e-icons',
                    tooltipText: 'Delete',
                    cssClass: 'tb-item-middle tb-item-lock-category'
                },
                {
                    type: 'Separator',
                    align: 'Center'
                },

                {
                    disabled: true,
                    type: 'Input',
                    tooltipText: 'Align Objects',
                    template: '<button id="alignBtn" style="width:100%;"></button>',
                    cssClass: 'tb-item-middle  tb-item-align-category'
                },
                {
                    disabled: true,
                    type: 'Input',
                    tooltipText: 'Distribute Objects',
                    template: '<button id="distributeBtn" style="width:100%;"></button>',
                    cssClass: 'tb-item-middle tb-item-space-category'
                },
                {
                    type: 'Separator',
                },
                {
                    disabled: true,
                    type: 'Input',
                    tooltipText: 'Order Commands',
                    template: '<button id="orderBtn" style="width:100%;"></button>',
                    cssClass: 'tb-item-middle tb-item-lock-category'
                },
                {
                    type: 'Separator'
                },
                {
                    disabled: true,
                    type: 'Input',
                    tooltipText: 'Group/Ungroup',
                    template: '<button id="groupBtn" style="width:100%;"></button>',
                    cssClass: 'tb-item-middle tb-item-align-category'
                },
                {
                    type: 'Separator'
                },
                {
                    disabled: true,
                    type: 'Input',
                    tooltipText: 'Rotate',
                    template: '<button id="rotateBtn" style="width:100%;"></button>',
                    cssClass: 'tb-item-middle tb-item-lock-category'
                },
                {
                    type: 'Separator'
                },
                {
                    disabled: true,
                    type: 'Input',
                    tooltipText: 'Flip',
                    template: '<button id="flipBtn" style="width:100%;"></button>',
                    cssClass: 'tb-item-middle tb-item-lock-category'
                },
                {
                    type: 'Separator'
                },
                {
                    cssClass: 'tb-item-end tb-zoom-dropdown-btn',
                    template: '<button id="btnZoomIncrement"></button>',
                },
            ];
            return items;
        }
        var conTypeBtn = new ej.splitbuttons.DropDownButton({
            items: conTypeItems,
            iconCss: 'e-ddb-icons e-connector e-icons',
            select: function(args) {
                onConnectorSelect(args);
            }
        });
        conTypeBtn.appendTo('#conTypeBtn');
        var shapesBtn = new ej.splitbuttons.DropDownButton({
            items: shapesItems,
            iconCss: 'e-shapes e-icons',
            select: function(args) {
                onShapesSelect(args);
            }
        });
        shapesBtn.appendTo('#shapesBtn');
        var btnZoomIncrement = new ej.splitbuttons.DropDownButton({
            items: zoomMenuItems,
            content: Math.round(diagram.scrollSettings.currentZoom * 100) + ' %',
            select: zoomChange,
        });
        btnZoomIncrement.appendTo('#btnZoomIncrement');

        var exportBtn = new ej.splitbuttons.DropDownButton({
            items: exportItems,
            iconCss: 'e-ddb-icons e-export',
            select: onselectExport,
        });
        exportBtn.appendTo('#exportBtn');

        var groupBtn = new ej.splitbuttons.DropDownButton({
            items: groupItems,
            iconCss: 'e-icons e-group-1',
            select: onSelectGroup
        });
        groupBtn.appendTo('#groupBtn');
        var alignBtn = new ej.splitbuttons.DropDownButton({
            items: alignItems,
            iconCss: 'sf-icon-align-center-1',
            select: onSelectAlignObjects
        });
        alignBtn.appendTo('#alignBtn');

        var distributeBtn = new ej.splitbuttons.DropDownButton({
            items: distributeItems,
            iconCss: 'sf-icon-distribute-vertical',
            select: onSelectDistributeObjects
        });
        distributeBtn.appendTo('#distributeBtn');
        var orderBtn = new ej.splitbuttons.DropDownButton({
            items: orderItems,
            iconCss: 'sf-icon-order',
            select: onSelectOrder
        });
        orderBtn.appendTo('#orderBtn');
        var rotateBtn = new ej.splitbuttons.DropDownButton({
            items: rotateItems,
            iconCss: 'e-icons e-repeat',
            select: onSelectRotate
        });
        rotateBtn.appendTo('#rotateBtn');
        var flipBtn = new ej.splitbuttons.DropDownButton({
            items: flipItems,
            iconCss: 'sf-icon-flip-horizontal',
            select: onSelectFlip
        });
        flipBtn.appendTo('#flipBtn');
        var rotateItems = [{
                iconCss: 'e-icons e-transform-right',
                text: 'Rotate Clockwise'
            },
            {
                iconCss: 'e-icons e-transform-left',
                text: 'Rotate Counter-Clockwise'
            }
        ];
        var flipItems = [{
                iconCss: 'e-icons e-flip-horizontal',
                text: 'Flip Horizontal'
            },
            {
                iconCss: 'e-icons e-flip-vertical',
                text: 'Flip Vertical'
            }
        ];
        var alignItems = [{
                iconCss: 'sf-icon-align-left-1',
                text: 'Align Left',
            },
            {
                iconCss: 'sf-icon-align-center-1',
                text: 'Align Center',
            },
            {
                iconCss: 'sf-icon-align-right-1',
                text: 'Align Right',
            },
            {
                iconCss: 'sf-icon-align-top-1',
                text: 'Align Top',
            },
            {
                iconCss: 'sf-icon-align-middle-1',
                text: 'Align Middle',
            },
            {
                iconCss: 'sf-icon-align-bottom-1',
                text: 'Align Bottom',
            },
        ];
        var distributeItems = [{
                iconCss: 'sf-icon-distribute-vertical',
                text: 'Distribute Objects Vertically',
            },
            {
                iconCss: 'sf-icon-distribute-horizontal',
                text: 'Distribute Objects Horizontally',
            },
        ];
        var orderItems = [{
                iconCss: 'e-icons e-bring-forward',
                text: 'Bring Forward'
            },
            {
                iconCss: 'e-icons e-bring-to-front',
                text: 'Bring To Front'
            },
            {
                iconCss: 'e-icons e-send-backward',
                text: 'Send Backward'
            },
            {
                iconCss: 'e-icons e-send-to-back',
                text: 'Send To Back'
            }
        ];
        var zoomMenuItems = [{
                text: 'Zoom In'
            }, {
                text: 'Zoom Out'
            }, {
                text: 'Zoom to Fit'
            }, {
                text: 'Zoom to 50%'
            },
            {
                text: 'Zoom to 100%'
            }, {
                text: 'Zoom to 200%'
            },
        ];
        var conTypeItems = [{
                text: 'Straight',
                iconCss: 'e-icons e-line'
            },
            {
                text: 'Orthogonal',
                iconCss: 'sf-icon-orthogonal'
            },
            {
                text: 'Bezier',
                iconCss: 'sf-icon-bezier'
            }
        ];
        var shapesItems = [{
                text: 'Rectangle',
                iconCss: 'e-rectangle e-icons'
            },
            {
                text: 'Ellipse',
                iconCss: ' e-circle e-icons'
            },
            {
                text: 'Polygon',
                iconCss: 'e-line e-icons'
            }
        ];
        var exportItems = [{
            text: 'JPG'
        }, {
            text: 'PNG'
        }, {
            text: 'SVG'
        }];
        var groupItems = [{
            text: 'Group',
            iconCss: 'e-icons e-group-1'
        }, {
            text: 'Ungroup',
            iconCss: 'e-icons e-ungroup-1'
        }];

        //Initialize Toolbar component
        var toolbarObj = new ej.navigations.Toolbar({
            clicked: function(args) {
                toolbarClick(args);
            },
            created: function(args) {
                if (diagram !== undefined) {
                    var conTypeBtn = new ej.splitbuttons.DropDownButton({
                        items: conTypeItems,
                        iconCss: 'e-ddb-icons e-connector e-icons',
                        select: function(args) {
                            onConnectorSelect(args);
                        }
                    });
                    conTypeBtn.appendTo('#conTypeBtn');
                    var btnZoomIncrement = new ej.splitbuttons.DropDownButton({
                        items: zoomMenuItems,
                        content: Math.round(diagram.scrollSettings.currentZoom * 100) + ' %',
                        select: zoomChange,
                    });
                    btnZoomIncrement.appendTo('#btnZoomIncrement');
                    var shapesBtn = new ej.splitbuttons.DropDownButton({
                        items: shapesItems,
                        iconCss: 'e-shapes e-icons',
                        select: function(args) {
                            onShapesSelect(args);
                        }
                    });
                    shapesBtn.appendTo('#shapesBtn');
                    var exportBtn = new ej.splitbuttons.DropDownButton({
                        items: exportItems,
                        iconCss: 'e-ddb-icons e-export',
                        select: function(args) {
                            onselectExport(args);
                        },
                    });
                    exportBtn.appendTo('#exportBtn');

                    var groupBtn = new ej.splitbuttons.DropDownButton({
                        items: groupItems,
                        iconCss: 'e-icons e-group-1',
                        select: function(args) {
                            onSelectGroup(args);
                        }
                    });
                    groupBtn.appendTo('#groupBtn');
                    var alignBtn = new ej.splitbuttons.DropDownButton({
                        items: alignItems,
                        iconCss: 'sf-icon-align-center-1',
                        select: function(args) {
                            onSelectAlignObjects(args);
                        }
                    });
                    alignBtn.appendTo('#alignBtn');

                    var distributeBtn = new ej.splitbuttons.DropDownButton({
                        items: distributeItems,
                        iconCss: 'sf-icon-distribute-vertical',
                        select: function(args) {
                            onSelectDistributeObjects(args);
                        }
                    });
                    distributeBtn.appendTo('#distributeBtn');
                    var orderBtn = new ej.splitbuttons.DropDownButton({
                        items: orderItems,
                        iconCss: 'e-icons e-order',
                        select: function(args) {
                            onSelectOrder(args);
                        }
                    });
                    orderBtn.appendTo('#orderBtn');
                    var rotateBtn = new ej.splitbuttons.DropDownButton({
                        items: rotateItems,
                        iconCss: 'e-icons e-repeat',
                        select: function(args) {
                            onSelectRotate(args);
                        }
                    });
                    rotateBtn.appendTo('#rotateBtn');
                    var flipBtn = new ej.splitbuttons.DropDownButton({
                        items: flipItems,
                        iconCss: 'e-icons e-flip-horizontal',
                        select: function(args) {
                            onSelectFlip(args);
                        }
                    });
                    flipBtn.appendTo('#flipBtn');
                    toolbarObj.refreshOverflow();
                }

            },
            items: toolbarItems(),
            overflowMode: 'Scrollable',
            width: '100%'
        });

        toolbarObj.appendTo('#toolbarEditor');
        // To perform zoom operation
        function zoomChange(args) {
            var zoomCurrentValue = document.getElementById("btnZoomIncrement").ej2_instances[0];
            var currentZoom = diagram.scrollSettings.currentZoom;
            var zoom = {};
            switch (args.item.text) {
                case 'Zoom In':
                    diagram.zoomTo({
                        type: 'ZoomIn',
                        zoomFactor: 0.2
                    });
                    zoomCurrentValue.content = (diagram.scrollSettings.currentZoom * 100).toFixed() + '%';
                    break;
                case 'Zoom Out':
                    diagram.zoomTo({
                        type: 'ZoomOut',
                        zoomFactor: 0.2
                    });
                    zoomCurrentValue.content = (diagram.scrollSettings.currentZoom * 100).toFixed() + '%';
                    break;
                case 'Zoom to Fit':
                    zoom.zoomFactor = 1 / currentZoom - 1;
                    diagram.zoomTo(zoom);
                    zoomCurrentValue.content = diagram.scrollSettings.currentZoom;
                    break;
                case 'Zoom to 50%':
                    if (currentZoom === 0.5) {
                        currentZoom = 0;
                        zoom.zoomFactor = (0.5 / currentZoom) - 1;
                        diagram.zoomTo(zoom);
                    } else {
                        zoom.zoomFactor = (0.5 / currentZoom) - 1;
                        diagram.zoomTo(zoom);
                    }
                    break;
                case 'Zoom to 100%':
                    if (currentZoom === 1) {
                        currentZoom = 0;
                        zoom.zoomFactor = (1 / currentZoom) - 1;
                        diagram.zoomTo(zoom);
                    } else {
                        zoom.zoomFactor = (1 / currentZoom) - 1;
                        diagram.zoomTo(zoom);
                    }
                    break;
                case 'Zoom to 200%':
                    if (currentZoom === 2) {
                        currentZoom = 0;
                        zoom.zoomFactor = (2 / currentZoom) - 1;
                        diagram.zoomTo(zoom);
                    } else {
                        zoom.zoomFactor = (2 / currentZoom) - 1;
                        diagram.zoomTo(zoom);
                    }
                    break;
            }

            zoomCurrentValue.content = Math.round(diagram.scrollSettings.currentZoom * 100) + ' %';

        }

        function onConnectorSelect(args) {
            diagram.clearSelection();
            diagram.drawingObject = {
                type: args.item.text
            };
            diagram.tool = ej.diagrams.DiagramTools.ContinuousDraw;
            diagram.selectedItems.userHandles = [];
            diagram.dataBind();
        }

        function onShapesSelect(args) {
            diagram.clearSelection();
            diagram.drawingObject = {
                shape: {
                    shape: args.item.text
                }
            };
            diagram.tool = ej.diagrams.DiagramTools.ContinuousDraw;
            diagram.selectedItems.userHandles = [];
            diagram.dataBind();
        }
        //Export the diagraming object based on the format.
        function onselectExport(args) {
            var exportOptions = {};
            exportOptions.format = args.item.text;
            exportOptions.mode = 'Download';
            exportOptions.region = 'PageSettings';
            exportOptions.fileName = 'Export';
            exportOptions.margin = {
                left: 0,
                top: 0,
                bottom: 0,
                right: 0
            };
            diagram.exportDiagram(exportOptions);
        }

        function onSelectGroup(args) {
            if (args.item.text === 'Group') {
                diagram.group();
            } else if (args.item.text === 'Ungroup') {
                diagram.unGroup();
            }
        }

        function onSelectAlignObjects(args) {
            var item = args.item.text;
            var alignType = item.replace('Align', '');
            var alignType1 = alignType.charAt(0).toUpperCase() + alignType.slice(1);
            diagram.align(alignType1.trim());
        }

        function onSelectDistributeObjects(args) {
            if (args.item.text === 'Distribute Objects Vertically') {
                diagram.distribute('BottomToTop');
            } else {
                diagram.distribute('RightToLeft');
            }
        }

        function onSelectOrder(args) {
            switch (args.item.text) {
                case 'Bring Forward':
                    diagram.moveForward();
                    break;
                case 'Bring To Front':
                    diagram.bringToFront();
                    break;
                case 'Send Backward':
                    diagram.sendBackward();
                    break;
                case 'Send To Back':
                    diagram.sendToBack();
                    break;
            }
        }

        function onSelectRotate(args) {
            if (args.item.text === 'Rotate Clockwise') {
                diagram.rotate(diagram.selectedItems, 90);
            } else {
                diagram.rotate(diagram.selectedItems, -90);
            }
        }

        function onSelectFlip(args) {
            flipObjects(args.item.text);
        }

        // To flip diagram objects
        function flipObjects(flipType) {
            var selectedObjects = diagram.selectedItems.nodes.concat(diagram.selectedItems.connectors);
            for (i = 0; i < selectedObjects.length; i++) {
                selectedObjects[i].flip = flipType === 'Flip Horizontal' ? 'Horizontal' : 'Vertical';
            }
            diagram.dataBind();
        }

        function toolbarClick(args) {
            var item = args.item.tooltipText;
            switch (item) {
                case 'Undo':
                    diagram.undo();
                    break;
                case 'Redo':
                    diagram.redo();
                    break;
                case 'Lock':
                    lockObject();
                    break;
                case 'Cut':
                    diagram.cut();
                    toolbarObj.items[8].disabled = false;
                    break;
                case 'Copy':
                    diagram.copy();
                    toolbarObj.items[8].disabled = false;
                    break;
                case 'Paste':
                    diagram.paste();
                    break;
                case 'Delete':
                    diagram.remove();
                    break;
                case 'Select Tool':
                    diagram.clearSelection();
                    diagram.tool = ej.diagrams.DiagramTools.Default;
                    break;
                case 'Text Tool':
                    diagram.clearSelection();
                    diagram.selectedItems.userHandles = [];
                    diagram.drawingObject = {
                        shape: {
                            type: 'Text'
                        },
                    };
                    diagram.tool = ej.diagrams.DiagramTools.ContinuousDraw;
                    break;
                case 'Pan Tool':
                    diagram.clearSelection();
                    diagram.tool = ej.diagrams.DiagramTools.ZoomPan;
                    break;
                case 'New Diagram':
                    diagram.clear();
                    historyChange();
                    break;
                case 'Print Diagram':
                    printDiagram(args);
                    break;
                case 'Save Diagram':
                    download(diagram.saveDiagram());
                    break;
                case 'Open Diagram':
                    document.getElementsByClassName('e-file-select-wrap')[0].querySelector('button').click();
                    break;
            }
            diagram.dataBind();
        }

        var uploadObject = new ej.inputs.Uploader({
            asyncSettings: {
                saveUrl: 'https://aspnetmvc.syncfusion.com/services/api/uploadbox/Save',
                removeUrl: 'https://aspnetmvc.syncfusion.com/services/api/uploadbox/Remove'
            },
            success: onUploadSuccess,
            showFileList: false

        });
        uploadObject.appendTo('#fileupload');

        function onUploadSuccess(args) {
            var file = args.file;
            var rawFile = file.rawFile;
            var reader = new FileReader();
            reader.readAsText(rawFile);
            reader.onloadend = loadDiagram;
        }
        //Load the diagraming object.
        function loadDiagram(event) {
            diagram.loadDiagram(event.target.result);
        }

        function printDiagram(args) {
            var options = {};
            options.mode = 'Download';
            options.region = 'Content';
            options.multiplePage = diagram.pageSettings.multiplePage;
            options.pageHeight = diagram.pageSettings.height;
            options.pageWidth = diagram.pageSettings.width;
            diagram.print(options);
        }

        function download(data) {
            var id = $('#businessId').val();
            if (window.navigator.msSaveBlob) {
                var blob = new Blob([data], {
                    type: 'data:text/json;charset=utf-8,'
                });

                window.navigator.msSaveOrOpenBlob(blob, 'Diagram.json');
            } else {
                $.ajax({
                    type: 'POST',
                    url: '{{ route('get.flowchart') }}', // Change this to the actual route URL
                    data: {
                        data: data,
                        id: id,
                        _token: '{{ csrf_token() }}'
                    },
                    success: function(response) {
                        alert('Successfully Created');
                        // toastrs('Success', 'Created', 'success');
                        // Handle the response from the server here
                    },
                    error: function(xhr, status, error) {
                        // toastrs('Error', 'Error', 'error');
                        // Handle errors here
                    }
                });
            }
        }

        // To lock diagram object
        function lockObject(args) {
            for (var i = 0; i < diagram.selectedItems.nodes.length; i++) {
                var node = diagram.selectedItems.nodes[i];
                if (node.constraints & ej.diagrams.NodeConstraints.Drag) {
                    node.constraints = ej.diagrams.NodeConstraints.PointerEvents | ej.diagrams.NodeConstraints.Select;
                } else {
                    node.constraints = ej.diagrams.NodeConstraints.Default;
                }
            }
            for (var j = 0; j < diagram.selectedItems.connectors.length; j++) {
                var connector = diagram.selectedItems.connectors[j];
                if (connector.constraints & ej.diagrams.ConnectorConstraints.Drag) {
                    connector.constraints = ej.diagrams.ConnectorConstraints.PointerEvents | ej.diagrams
                        .ConnectorConstraints.Select;
                } else {
                    connector.constraints = ej.diagrams.ConnectorConstraints.Default;
                }
            }
            diagram.dataBind();
        }
        $('#toolbarEditor').removeAttr('style');
    </script>

</body>

</html>
